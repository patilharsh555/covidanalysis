[{"D:\\Work\\HusaliPOC\\covid-app\\src\\index.js":"1","D:\\Work\\HusaliPOC\\covid-app\\src\\reportWebVitals.js":"2","D:\\Work\\HusaliPOC\\covid-app\\src\\App.js":"3","D:\\Work\\HusaliPOC\\covid-app\\src\\Dashboard.jsx":"4","D:\\Work\\HusaliPOC\\covid-app\\src\\axios.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":102,"mtime":1608488233464,"results":"9","hashOfConfig":"7"},{"size":9453,"mtime":1608490928527,"results":"10","hashOfConfig":"7"},{"size":215,"mtime":1608489141555,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vqp7kk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\HusaliPOC\\covid-app\\src\\index.js",[],["24","25"],"D:\\Work\\HusaliPOC\\covid-app\\src\\reportWebVitals.js",[],"D:\\Work\\HusaliPOC\\covid-app\\src\\App.js",[],"D:\\Work\\HusaliPOC\\covid-app\\src\\Dashboard.jsx",["26","27"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  Select,\r\n  Divider,\r\n  Link,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  CssBaseline,\r\n  CardContent,\r\n  Card,\r\n} from \"@material-ui/core\";\r\n\r\nimport { fetchCovidData } from \"./axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  covidWrapper: {\r\n    // backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(3, 0, 3),\r\n  },\r\n  subText: {\r\n    marginTop: 10,\r\n    marginBottom: 0,\r\n  },\r\n  sectionHead: {\r\n    fontWeight: 300,\r\n  },\r\n  sectionHeadTwo: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  innerGrid: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    marginLeft: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  dropdownRegion: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [covidData, setCovidData] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    const covidDataRes = await fetchCovidData();\r\n    setSelectedCountry(covidDataRes.Countries[76]);\r\n    setCovidData(covidDataRes);\r\n  }, []);\r\n\r\n  const handleCountryChange = (event) => {\r\n    const codeForCntry = event.target.value.toString();\r\n    const currentCountry = covidData.Countries.filter(\r\n      (cntry) => cntry.CountryCode === codeForCntry\r\n    );\r\n    setSelectedCountry(currentCountry[0]);\r\n  };\r\n\r\n  if (!covidData) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main>\r\n        <div className={classes.covidWrapper}>\r\n          <Container>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              COVID 19 - A World Outlook\r\n            </Typography>\r\n            <Divider />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n              className={classes.subText}\r\n            >\r\n              A tool to analyse the COVID-19 cases country wise\r\n            </Typography>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid}>\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h3\"\r\n            color=\"textPrimary\"\r\n            className={classes.sectionHead}\r\n            gutterBottom\r\n          >\r\n            World Count\r\n          </Typography>\r\n          <Grid container spacing={4} className={classes.innerGrid}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.card} raised>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h3\"\r\n                  >\r\n                    Total Cases:\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"h2\"\r\n                    variant=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {covidData.Global.TotalConfirmed}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.card} raised>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h3\"\r\n                  >\r\n                    Active Cases:\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"h2\"\r\n                    variant=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {covidData.Global.TotalConfirmed -\r\n                      covidData.Global.TotalRecovered}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.card} raised>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h3\"\r\n                  >\r\n                    Deceased Cases:\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"h2\"\r\n                    variant=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {covidData.Global.TotalDeaths}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid container spacing={4} className={classes.sectionHeadTwo}>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h3\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                className={classes.sectionHead}\r\n              >\r\n                Country Wise Count\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6} className={classes.dropdownRegion}>\r\n              <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\">\r\n                Select Country:\r\n              </Typography>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={selectedCountry.CountryCode}\r\n                  onChange={handleCountryChange}\r\n                >\r\n                  {covidData.Countries.map((item) => {\r\n                    return (\r\n                      <MenuItem key={item.CountryCode} value={item.CountryCode}>\r\n                        {item.Country}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.card} raised>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h3\"\r\n                  >\r\n                    Total Cases:\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"h2\"\r\n                    variant=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {selectedCountry.TotalConfirmed}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.card} raised>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h3\"\r\n                  >\r\n                    Active Cases:\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"h2\"\r\n                    variant=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {selectedCountry.TotalConfirmed -\r\n                      selectedCountry.TotalRecovered}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.card} raised>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h3\"\r\n                  >\r\n                    Deceased Cases:\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"h2\"\r\n                    variant=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {selectedCountry.TotalDeaths}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Work\\HusaliPOC\\covid-app\\src\\axios.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":10,"column":3,"nodeType":"34","messageId":"35","endLine":10,"endColumn":7},{"ruleId":"36","severity":1,"message":"37","line":68,"column":13,"nodeType":"38","endLine":72,"endColumn":4},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]